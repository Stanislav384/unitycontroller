using UnityEngine;

public class PlayerMovement : MonoBehaviour
{
    [Header("Movement")]
    public float moveSpeed = 5f;
    public float jumpForce = 12f;

    [Header("Ground Check")]
    public Transform groundCheck;
    public float groundCheckRadius = 0.2f;
    public LayerMask groundLayer;

    private Rigidbody2D rb;
    private Animator animator;
    private SpriteRenderer spriteRenderer; // Добавили SpriteRenderer
    private bool isGrounded;

    void Start()
    {
        rb = GetComponent<Rigidbody2D>();
        animator = GetComponent<Animator>();
        spriteRenderer = GetComponent<SpriteRenderer>(); // Инициализация
    }

    void Update()
    {
        // Проверка земли
        isGrounded = Physics2D.OverlapCircle(groundCheck.position, groundCheckRadius, groundLayer);

        // Горизонтальное движение
        float moveInput = Input.GetAxisRaw("Horizontal");
        rb.linearVelocity = new Vector2(moveInput * moveSpeed, rb.linearVelocity.y);

        // Разворот спрайта (ПРОСТОЙ И ПРАВИЛЬНЫЙ СПОСОБ)
        if (moveInput != 0)
        {
            spriteRenderer.flipX = moveInput < 0; // Если идём влево — flipX = true
        }

        // Прыжок
        if (Input.GetKeyDown(KeyCode.Space) && isGrounded)
        {
            rb.linearVelocity = new Vector2(rb.linearVelocity.x, jumpForce);
            animator.SetBool("IsJumping", true);
        }

        // Анимация бега
        animator.SetFloat("Speed", Mathf.Abs(moveInput));

        // Анимация падения
        animator.SetBool("IsFalling", rb.linearVelocity.y < -0.1f);

        // Сброс прыжка при приземлении
        if (isGrounded && Mathf.Abs(rb.linearVelocity.y) < 0.01f)
        {
            animator.SetBool("IsJumping", false);
        }
    }

    void OnDrawGizmosSelected()
    {
        if (groundCheck != null)
        {
            Gizmos.color = Color.red;
            Gizmos.DrawWireSphere(groundCheck.position, groundCheckRadius);
        }
    }
}
