using UnityEngine;

public class PlayerSpawner : MonoBehaviour
{
    public GameObject playerPrefab; // Ваш префаб игрока

    void Start()
    {
        // Сначала убедимся, что GameManager существует
        if (GameManager.Instance == null)
        {
            Debug.LogError("GameManager.Instance не найден! Убедитесь, что объект GameManager с его скриптом существует в первой сцене и настроен как DontDestroyOnLoad.");
            return;
        }

        // Ищем StartPoint один раз
        GameObject currentSpawnPoint = GameObject.FindGameObjectWithTag("StartPoint");
        if (currentSpawnPoint == null)
        {
            Debug.LogWarning("StartPoint не найден в текущей сцене! Игрок может появиться в начале координат сцены.");
            // Можно здесь добавить логику, что если StartPoint не найден,
            // то игрок спавнится в (0,0,0) или не спавнится вообще.
            // Пока просто выходим, чтобы избежать NullReferenceException.
            return;
        }

        // Проверяем, существует ли уже игрок в сцене (например, если он был DontDestroyOnLoad)
        // В вашем случае, PlayerMovement не DontDestroyOnLoad, так что эта проверка
        // будет ловить игрока, если он почему-то уже был в сцене (например, вручную добавлен).
        GameObject existingPlayer = GameObject.FindGameObjectWithTag("Player"); 
        
        if (existingPlayer != null)
        {
            // Если игрок уже есть, просто перемещаем его на StartPoint
            existingPlayer.transform.position = currentSpawnPoint.transform.position;
            
            Rigidbody2D rb = existingPlayer.GetComponent<Rigidbody2D>();
            if (rb != null)
            {
                rb.linearVelocity = Vector2.zero; // Сброс velocity
            }
            
            // Активируем его, если он был отключен после смерти
            existingPlayer.SetActive(true); 
            Collider2D col = existingPlayer.GetComponent<Collider2D>();
            if(col != null) col.enabled = true;
            
            if (rb != null) 
            {
                // Использование bodyType вместо isKinematic
                rb.bodyType = RigidbodyType2D.Dynamic; // Возвращаем обычную физику
            }
            
            PlayerMovement pm = existingPlayer.GetComponent<PlayerMovement>();
            if(pm != null) pm.enabled = true; // Включаем скрипт

            Debug.Log("Existing player moved to StartPoint.");
            return; // Выходим, так как игрок уже есть
        }


        // Если игрока нет, спавним новый префаб
        if (playerPrefab != null)
        {
            GameObject spawnedPlayer = Instantiate(playerPrefab, currentSpawnPoint.transform.position, Quaternion.identity);
            spawnedPlayer.tag = "Player"; // Убедимся, что у спавненного игрока есть тэг "Player"
            Debug.Log("Player spawned at StartPoint.");
        }
        else
        {
            Debug.LogWarning("PlayerPrefab не назначен в PlayerSpawner!");
        }
    }
}
