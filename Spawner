using UnityEngine;

public class PlayerSpawner : MonoBehaviour
{
    public GameObject playerPrefab; // Ваш префаб игрока

    void Start()
    {
        // Сначала убедимся, что GameManager существует
        if (GameManager.Instance == null)
        {
            Debug.LogError("GameManager.Instance не найден! Убедитесь, что объект GameManager с его скриптом существует в первой сцене и настроен как DontDestroyOnLoad.");
            return;
        }

        // Проверяем, существует ли уже игрок в сцене (если он был DontDestroyOnLoad, например)
        // В вашем случае, PlayerMovement не DontDestroyOnLoad, так что это менее критично.
        // Но если бы он был, то здесь бы мы искали PlayerMovement.Instance
        GameObject existingPlayer = GameObject.FindGameObjectWithTag("Player"); 
        if (existingPlayer != null)
        {
            // Если игрок уже есть, просто перемещаем его на StartPoint
            // (этот блок сработает, если вы решите сделать PlayerMovement DontDestroyOnLoad в будущем)
            GameObject spawnPoint = GameObject.FindGameObjectWithTag("StartPoint");
            if (spawnPoint != null)
            {
                existingPlayer.transform.position = spawnPoint.transform.position;
                // Сброс velocity
                Rigidbody2D rb = existingPlayer.GetComponent<Rigidbody2D>();
                if (rb != null) rb.linearVelocity = Vector2.zero;
                
                // Активируем его, если он был отключен после смерти
                existingPlayer.SetActive(true); 
                existingPlayer.GetComponent<Collider2D>().enabled = true;
                existingPlayer.GetComponent<Rigidbody2D>().isKinematic = false;
                existingPlayer.GetComponent<PlayerMovement>().enabled = true;

                Debug.Log("Existing player moved to StartPoint.");
            }
            return; // Выходим, так как игрок уже есть
        }


        // Если игрока нет, спавним новый префаб
        GameObject spawnPoint = GameObject.FindGameObjectWithTag("StartPoint");
        if (spawnPoint != null && playerPrefab != null)
        {
            GameObject spawnedPlayer = Instantiate(playerPrefab, spawnPoint.transform.position, Quaternion.identity);

            // Здесь мы должны убедиться, что PlayerMovement скрипт на спавненном игроке
            // инициализирует свое здоровье из GameManager.
            // Но в нашей текущей реализации PlayerMovement не имеет currentHealth,
            // он напрямую обращается к GameManager.Instance.currentHealth для TakeDamage.
            // Поэтому, никаких дополнительных действий здесь не требуется для установки здоровья,
            // только для его спавна.

            Debug.Log("Player spawned at StartPoint.");
        }
        else
        {
            Debug.LogWarning("StartPoint или PlayerPrefab не найден!");
        }
    }
}
